version: 2

defaults: &defaults
  working_directory: ~/scatter
  # Available images https://hub.docker.com/r/circleci/node/tags/

aliases:
  - &restore_yarn_cache
    name: Restore yarn cache
    keys:
      - yarn-packages-{{ .Branch }}-{{ checksum "yarn.lock" }}
      - yarn-packages-{{ .Branch }}
      - yarn-packages-
  - &save_yarn_cache
    name: Save yarn cache
    paths:
      - ~/.cache/yarn
    key: yarn-packages-{{ .Branch }}-{{ checksum "yarn.lock" }}

jobs:
  install:
    <<: *defaults
    docker:
      - image: circleci/node:12.15.0
    steps:
      - checkout
      - restore_cache: *restore_yarn_cache
      - run: yarn install --frozen-lockfile
      - save_cache: *save_yarn_cache

      - store_artifacts:
          path: package.json

      - persist_to_workspace:
          root: ~/scatter
          paths:
            - .

  build:
    <<: *defaults
    docker:
      - image: circleci/node:12.15.0
      - image: qlikcore/engine:12.961.0
        command: -S AcceptEULA=yes
      - image: browserless/chrome:1.45.1-puppeteer-1.20.0
    steps:
      - attach_workspace:
          at: ~/scatter
      - run:
          name: Build
          command: yarn run build
      - run:
          name: Lint
          command: yarn run lint
      - run:
          name: Update spec
          command: yarn run spec
      - run:
          name: Run unit tests and publish to codeclimate
          command: |
            if [ ! -z "$CC_TEST_REPORTER_ID" ]; then
              curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
              chmod +x ./cc-test-reporter
              ./cc-test-reporter before-build
              yarn test:unit -- --mocha.bail false
              ./cc-test-reporter after-build --coverage-input-type lcov --exit-code $?
            fi
      - store_artifacts:
          path: coverage
      - persist_to_workspace:
          root: ~/scatter
          paths:
            - dist
            - package.json

  publish-dev:
    <<: *defaults
    docker:
      - image: circleci/node:12.15.0
    steps:
      - attach_workspace:
          at: ~/scatter
      - run: mv ./dist sn-scatter-plot && zip -r "sn-scatter-plot.zip" "./sn-scatter-plot"
      - store_artifacts:
          path: ./sn-scatter-plot.zip

  publish:
    <<: *defaults
    docker:
      - image: circleci/node:12.15.0
    steps:
      - attach_workspace:
          at: ~/scatter
      - run:
          name: Setup npm
          command: |
            set -eo pipefail
            # Amend auth token for access to public npm registry for @nebula.js packages
            echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
      - run:
          name: Publish
          command: |
            set -euo pipefail
            PROJ_VER=v$(cat package.json | jq -r '.version')
            TAG_NAME=$(git tag --points-at HEAD)

            if [ "$TAG_NAME" == "$PROJ_VER" ]
            then
              echo "Running >> npm publish"
              npm publish
            fi
  api-governance:
    machine: true
    working_directory: ~/project
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - run:
          name: Login for Docker
          command: echo $GH_ACCESS_TOKEN | docker login -u "$GH_USER" --password-stdin ghcr.io/qlik-trial
      - run:
          name: API Governance Scatter Plot Properties
          command: |
            docker pull ghcr.io/qlik-trial/asmquery:latest
            docker create -v /specs --name specs alpine:3.4 /bin/true
            docker cp ./api-specifications/properties.json specs:/specs
            docker run --volumes-from specs \
            -e target=Colony \
            -e runMode=failBuild \
            -e apiId=0395aa3a-3d13-439f-a0a6-3d47e0462a8f \
            -e specPath='/specs/properties.json' \
            -e commit="$CIRCLE_SHA1" ghcr.io/qlik-trial/asmquery:latest
      - run:
          name: API Governance Scatter Plot Plugins
          command: |
            docker cp ./api-specifications/plugins.json specs:/specs
            docker run --volumes-from specs \
            -e target=Colony \
            -e runMode=failBuild \
            -e apiId=86d3d254-a759-433c-b235-c14b479b4521 \
            -e specPath='/specs/plugins.json' \
            -e commit="$CIRCLE_SHA1" ghcr.io/qlik-trial/asmquery:latest
workflows:
  version: 2
  build-all:
    jobs:
      - install
      - build:
          requires:
            - install
      - api-governance:
          filters:
            branches:
              # Forked pull requests have CIRCLE_BRANCH set to pull/XXX
              ignore: /pull\/[0-9]+/
            tags:
              only:
                - /v.*/
      - publish-dev:
          requires:
            - build
      - publish:
          requires:
            - build
          filters:
            branches:
              only:
                - main
